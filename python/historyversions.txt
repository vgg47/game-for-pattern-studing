v1.1 	2018/04/20		Добавил класс игрока Player(имеет поля level, experience, gold, inventary, army), изменил структуру армии. В классе Player  имеется словарь army, который хранит имеющиеся у игрока армии. Теперь чтобы обратиться к отряду армии нужно ввести запрос <player_name>.army['<army_name>'].squads['<squad_name>']. Отряд есть list, то есть доступ к юнитам осуществляется по числовому индексу. Метод create_army(self, _race, _factory, name_army) теперь имеет улучшенную интуитивно понятную семантику.

v1.1.1	2018/05/02	Улучшил класс Player.  Теперь он содержит лист армий, а не словарь. Тоже самое с классом Army, отряды теперь хранятся в листе. Имя армии теперь хранится в отдельном поле name_army, а отряды больше имени не имеют. Вынес код, отвечающий за взаимодействие с пользователем, в отдельный файл dialogues.py и разбил на интуитивно понятные методы. Убрал метод message из всех конструкторов персонажей. Теперь сообщения о создании выводит метод hire класса Army.  ----->  ПАТТЕРН КОМПОНОВЩИК  <-----  Добавил метод count_attack в класс  Player. При вызове метода без аргументов он возвращает суммарную атаку всех армии игрока. Так же можно вызывать с аргументом, где аргумент - конкретная армия. Тогда метод вернет суммарный урон указанной армии. Метод устроен так, что он вызывает в нужных армиях метод count_attack класса Army, который в свою очередь проходит по всем юнитам всех отрядов и суммирует их атаку. 
